require ('open-uri')

class VulnerabilityScraperService

  attr_reader :vulnerability

  def initialize(vulnerability)
    @vulnerability = vulnerability || create_vulnerability(get_one_row_data(0))
  end

  def scrape_website_updates
    row_number = 0
    while (vulnerability_exists? get_one_row_data(row_number)[:title])
      new_vulnerability = create_vulnerability(get_one_row_data(row_number))
      new_vulnerability.save!
      row_number        += 1
    end
  end

  private

  def get_website_data
    Nokogiri::HTML(open(ENV['WEBSITE_URL']))
  end

  def get_one_row_data(row_number)
    table_row = get_website_data.css('.table').css('tr')[row_number]

    link      = ENV['WEBSITE_URL'] + table_row.css('td')[2].at_css('a')['href']
    date      = Date.parse(table_row.css('td')[0])
    gem_name  = table_row.css('td')[1].to_s.gsub(/(\s+)|(<[^>]*>)/, '')
    title     = table_row.css('td')[2].at_css('a').text.gsub(/\n/,'')

    {
        date:     date,
        gem_name: gem_name,
        link:     link,
        title:    title
    }
  end

  def vulnerability_exists? title
    !Vulnerability.exists?(title: title)
  end

  def create_vulnerability(vulnerability)
    Vulnerability.create(
        date:     vulnerability[:date],
        gem_name: vulnerability[:gem_name],
        link:     vulnerability[:link],
        title:    vulnerability[:title]
    )
  end
end
